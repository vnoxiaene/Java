@@@@@@@@@EXEMPLOS DE EXCEÇÔES@@@@@@@@@
*************************************************************************************
public class TryCatchWithFinally {

	public static void main(String[] args) {

		try {

			int[]myNumbers = {1,2,3};
			System.out.println(myNumbers[10]);

		}catch (Exception e){
			System.err.println("Out of range");
		}finally {
			System.out.println("FINALLY EXECUTED");
		}

	}

}
*************************************************************************************
import java.util.InputMismatchException;
import java.util.Scanner;

public class TryCatchExample {
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		boolean continues = true;

		do{
			try{
				System.out.print("Numerator: ");
				int numerator = sc.nextInt();

				System.out.print("Denominator: ");
				int denominator = sc.nextInt();

				int result = division(numerator, denominator);
				System.out.println("Result: "+result);

				continues = false;

			}catch (InputMismatchException error1) {
				System.err.println("You shouldn't insert any different than numbers!\n");
				sc.nextLine();
			}catch(ArithmeticException error2){
				System.err.println("You shouldn't divide number by zero\n");
			}
			finally{
				System.out.println("Finally's execution!\n");
			}
		}while(continues);
	}

	public static int division(int numerator, int denominator) throws ArithmeticException {
		
		return numerator / denominator;
		
	}
}
*************************************************************************************
import java.util.Scanner;

public class ThrowExample {
    

    public static void main(String[] args) {
    	boolean continues = true;
    	do {
	    	try {
	            Scanner s = new Scanner(System.in);
	
	            System.out.print("Type a new password with exactly five characters: \n");
	            String password = s.nextLine();
	
	            if (password.length() < 5) {
	                throw new Exception("Too short, try a different one!\n");
	            } else {
	                if (password.length() > 5) {
	                    throw new Exception("Too long, try a different one!\n");
	                }
	            }
	            System.out.println("New password has been created!\n");
	            continues = false;
	        } catch (Exception ex) {
	            System.err.println(ex.getMessage());
	        }
    	}while(continues);
    }
}
*************************************************************************************
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
 class TryCatch_File_notFound {
 
    public static void main(String args[]) throws IOException  {
        try {
 
                      
            BufferedReader br = new BufferedReader(new FileReader("C://Users//e076494//VNC//test.txt")); //se o file nao existir no pc de vcs vai sempre cair no catch!!! Se querem ver funcionar, criem um file qualquer, coloquem umas linhas de texto e passem o path dele dentro dos parenteses
            String line;
            while ((line = br.readLine()) != null) {
              System.out.println(line);
            }
            
        } catch (FileNotFoundException e) {
           System.err.println("File does not exist");
        }
    }
}
*************************************************************************************
import java.util.*; 

 	public class ListExample1 {

	 public static void main(String[] args) {
		 
	   LinkedList<String> al = new LinkedList<String>();
	   al.add("One");
	   al.add("Two");
	   al.add("Three");
	   al.add("Four");
	   al.add("Five");
	   
	  
	
       al.remove(0);
       System.out.print(al);
       System.out.println();
       al.add(4, "ZERO");
	   
	   System.out.print(al);
	   //System.out.print(al.get(3));

	 	 }
	}
*************************************************************************************
import java.util.*; 

 	public class ListExample2 {

	 public static void main(String[] args) {
	   ArrayList<String> lc = new ArrayList<String>();
	   Scanner sc = new Scanner(System.in);

		System.out.println("Deseja começar uma nova lista? (S/N)");
		String resp = sc.nextLine();
		
		if(resp.equalsIgnoreCase("S")) {
			String item;
			do{
				System.out.println("Adicione um item à lista de compras ou digite 'x' para encerrar:");
				item = sc.nextLine();
				addToList(item, lc);
				System.out.println("Lista de compras: " + lc);
			}while(!item.equalsIgnoreCase("x"));
		}else if(resp.equalsIgnoreCase("N")){
			System.out.println("Lista encerrada!");
			return;
		}
		System.out.println("Lista encerrada!");
        	 
}

	public static ArrayList<String> addToList(String item, ArrayList<String> lc ) {
		
		if(!item.equalsIgnoreCase("x")) {
			lc.add(item);
			
		}return lc;
	}	
}
	     
*************************************************************************************
import java.util.*; 

public class SetExample1 {

	 public static void main(String[] args) {
	   Set<String> hs = new HashSet<String>();
	   //Set<String> hs = new LinkedHashSet<String>();
	   hs.add("One");
	   hs.add("Two");
	   hs.add("Three");
	   hs.add("Four");
	   hs.add("Five");
	   hs.add("Ten");
	   hs.add("Ten");
	   
	   
	   System.out.println("HashSet Elements: ");
	   System.out.print(hs);

	 	 }
	}
*************************************************************************************
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

public class SetExampleIterator {
	public static void main(String[] args) {
		Set hashSet = new HashSet();//Criacao do HashSet
		for(int i = 1; i < 10; i++) //For para preencher a hs
		{
			hashSet.add(i); //Adicionando elemento i ao hashSet
		}
		Iterator itHashSet = hashSet.iterator(); //obtendo Iterator para HashSet

		//Enquanto existir proximo elemento nos Iterators
		while(itHashSet.hasNext())
		{
			//Imprime (system.out.println) o proximo elemento de cada Iterator
			System.out.println("HashSet: "+itHashSet.next());
		}
	}
}
*************************************************************************************
import java.util.HashSet;

public class SetExampleContains {
  public static void main(String[] args) {

    // Create a HashSet object called numbers
    HashSet<Integer> numbers = new HashSet<Integer>();

    // Add values to the set
    numbers.add(4);
    numbers.add(7);
    numbers.add(8);
    numbers.clear();
    // Show which numbers between 1 and 10 are in the set
    for(int i = 1; i <= 10; i++) {
      if(numbers.contains(i)) {
        System.out.println(i + " was found in the set.");
      } else {
        System.out.println(i + " was not found in the set.");
      }
    }
  }
}
*************************************************************************************